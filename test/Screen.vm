function Screen.init 0
push constant 16
call Array.new 1
pop static 1
push constant 0
push static 1
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 0
push static 1
add
pop pointer 1
push that 0
push constant 0
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 1
add
push constant 1
push static 1
add
pop pointer 1
push that 0
push constant 1
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 1
add
push constant 2
push static 1
add
pop pointer 1
push that 0
push constant 2
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 1
add
push constant 3
push static 1
add
pop pointer 1
push that 0
push constant 3
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 1
add
push constant 4
push static 1
add
pop pointer 1
push that 0
push constant 4
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 1
add
push constant 5
push static 1
add
pop pointer 1
push that 0
push constant 5
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 1
add
push constant 6
push static 1
add
pop pointer 1
push that 0
push constant 6
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 1
add
push constant 7
push static 1
add
pop pointer 1
push that 0
push constant 7
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 1
add
push constant 8
push static 1
add
pop pointer 1
push that 0
push constant 8
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 1
add
push constant 9
push static 1
add
pop pointer 1
push that 0
push constant 9
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 1
add
push constant 10
push static 1
add
pop pointer 1
push that 0
push constant 10
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 1
add
push constant 11
push static 1
add
pop pointer 1
push that 0
push constant 11
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 1
add
push constant 12
push static 1
add
pop pointer 1
push that 0
push constant 12
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 1
add
push constant 13
push static 1
add
pop pointer 1
push that 0
push constant 13
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 15
push static 1
add
push constant 14
push static 1
add
pop pointer 1
push that 0
push constant 14
push static 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop static 0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push constant 16384
push local 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 4
push argument 0
push argument 1
call Screen.checkPixelIndex 2
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
call Screen.divSixteen 1
pop local 3
push constant 16384
push argument 1
push constant 32
call Math.multiply 2
add
push local 3
add
pop local 0
push local 0
call Memory.peek 1
pop local 1
push argument 0
push constant 15
and
pop local 2
push static 0
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
push static 1
add
pop pointer 1
push that 0
or
pop local 1
goto IF_END1
label IF_FALSE1
push local 1
push local 2
push static 1
add
pop pointer 1
push that 0
not
and
pop local 1
label IF_END1
push local 0
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawLine 1
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.checkLineIndex 4
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 8
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
push argument 2
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
pop local 0
push argument 2
pop argument 0
push local 0
pop argument 2
push argument 1
pop local 0
push argument 3
pop argument 1
push local 0
pop argument 3
label IF_FALSE1
push argument 0
push argument 2
eq
push argument 1
push argument 3
eq
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawStraightLine 4
pop temp 0
goto IF_END2
label IF_FALSE2
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawDiagonalLine 4
pop temp 0
label IF_END2
push constant 0
return
function Screen.drawRectangle 0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.checkLineIndex 4
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 9
call Sys.error 1
pop temp 0
label IF_FALSE0
label WHILE_EXP0
push argument 1
push argument 3
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawHorizontalLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 5
push argument 2
push constant 181
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 13
call Sys.error 1
pop temp 0
label IF_FALSE0
push argument 0
push argument 1
push argument 2
call Screen.checkCircleValidation 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 12
call Sys.error 1
pop temp 0
label IF_FALSE1
push argument 2
not
push constant 1
add
pop local 4
label WHILE_EXP0
push local 4
push argument 2
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 4
push local 4
call Math.multiply 2
sub
call Math.sqrt 1
sub
pop local 0
push argument 1
push local 4
add
pop local 1
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 4
push local 4
call Math.multiply 2
sub
call Math.sqrt 1
add
pop local 2
push argument 1
push local 4
add
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawLine 4
pop temp 0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.checkPixelIndex 0
push argument 0
push constant 0
lt
push argument 0
or
push constant 511
gt
push argument 1
or
push constant 0
lt
push argument 1
or
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 0
not
return
label IF_END0
function Screen.checkLineIndex 0
push argument 0
push argument 1
call Screen.checkPixelIndex 2
push argument 2
push argument 3
call Screen.checkPixelIndex 2
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Screen.checkCircleValidation 4
push argument 0
push argument 2
sub
pop local 0
push argument 0
push argument 2
add
pop local 1
push argument 1
push argument 2
sub
pop local 2
push argument 1
push argument 2
add
pop local 3
push argument 0
push argument 1
call Screen.checkPixelIndex 2
not
push local 0
and
push constant 0
lt
push local 2
and
push constant 0
lt
push local 1
and
push constant 511
gt
push local 3
and
push constant 255
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 0
not
return
label IF_END0
function Screen.drawStraightLine 0
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawHorizontalLine 4
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawVerticalLine 4
pop temp 0
label IF_END0
push constant 0
return
function Screen.drawHorizontalLine 0
label WHILE_EXP0
push argument 0
push argument 2
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawVerticalLine 1
push argument 1
push argument 3
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 0
push argument 3
pop argument 1
push local 0
pop argument 3
label IF_FALSE0
label WHILE_EXP0
push argument 1
push argument 3
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawDiagonalLine 6
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push argument 2
push argument 0
sub
pop local 4
push argument 3
push argument 1
sub
pop local 3
push local 3
call Math.abs 1
pop local 5
label WHILE_EXP0
push local 0
push local 4
gt
not
push local 1
push local 5
gt
not
and
not
if-goto WHILE_END0
push local 3
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawPixel 2
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
label IF_END0
push local 2
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
push local 3
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push local 3
sub
pop local 2
goto IF_END2
label IF_FALSE2
push local 2
push local 3
add
pop local 2
label IF_END2
goto IF_END1
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
push local 2
push local 4
sub
pop local 2
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.divSixteen 2
push constant 0
pop local 0
push constant 4
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push argument 0
push local 1
push static 1
add
pop pointer 1
push that 0
and
push local 1
push static 1
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
push constant 4
sub
push static 1
add
pop pointer 1
push that 0
add
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Screen.getBitsArray 0
push argument 0
push static 1
add
pop pointer 1
push that 0
return
